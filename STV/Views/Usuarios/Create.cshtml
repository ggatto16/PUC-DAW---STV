@model STV.ViewModels.UsuarioVM

@{
    ViewBag.Title = "Novo";
}

<h2>Adicionar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", @id = "cpf" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Iddepartamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Iddepartamento", null, "Selecione", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Iddepartamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 control-label">
                <label>Permissão</label>
            </div>
            <div class="col-md-10">
                <table style="margin-top: 6px;">
                    <tr>
                        @{
                            int cnt = 0;
                            List<STV.ViewModels.RolesAtribuidas> roles = ViewBag.Roles;

                            foreach (var role in roles)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td style="padding-right: 10px;">
                                    <input type="radio"
                                           name="rolesSelecionadas"
                                           value="@role.Idrole"
                                           @(Html.Raw((Model.Roles.Count == 0 && role.Nome == "Default") || role.Atribuida ? "checked=\"checked\"" : "")) />
                                        @role.Nome
                                        @:</td>
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                </div>
            </div>
        </div>
                            }

<div>
    <a href="@Url.Action("Index")" class="btn btn-default grid-control" data-toggle="tooltip" data-placement="auto" title="Voltar para Listagem">Voltar</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CustomValidation.js")
    @Scripts.Render("~/bundles/inputmask")
}
