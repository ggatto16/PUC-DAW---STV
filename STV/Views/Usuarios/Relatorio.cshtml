@model STV.ViewModels.RelatorioUsuario

@{
    ViewBag.Title = "Relatório de Acompanhamento";
    Layout = "~/Views/Shared/_PdfLayout.cshtml";
}

<div style="text-align: center; width: 100%; overflow: hidden;">
    <img src="@Server.MapPath("~/Images/logo-relat.jpg")" width="400" />
    <h2>Relatório de Acompanhamento de Aluno</h2>
    <h3>@Model.Nome</h3>
</div>

<div style="position:relative;">
    <div style="text-align: center; width: 100%; overflow: hidden;">

        @if (Model.Medalhas.Count() == 0)
        {
            <span>Nenhuma medalha conquistada</span>
        }
        else
        {
            foreach (var medalha in Model.Medalhas)
            {
                switch ((STV.Models.Medalhas)medalha.Idmedalha)
                {
                    case STV.Models.Medalhas.Sortudo:
                        <img src="@Server.MapPath("~/Images/ico-Sortudo.jpg")" width="30" />
                        break;
                    case STV.Models.Medalhas.Nerd:
                        <img src="@Server.MapPath("~/Images/ico-Nerd.jpg")" width="30" />
                        break;
                    case STV.Models.Medalhas.Genio:
                        <img src="@Server.MapPath("~/Images/ico-Genio.jpg")" width="30" />
                        break;
                    default:
                        break;
                }
            }
        }
    </div>

@if (Model.Cursos.Count() == 0)
{
    <div style="text-align: center; width: 100%; margin-top: 30px;">
        <h2>Nada para ver aqui</h2>
        Este usuário não participou de nenhum curso até agora
    </div>
}
else
{
     
        var notaMaximaCurso = 0;
        var notaAlunoCurso = 0;
        var qtdMateriaisCurso = 0;
        var notaMaximaUnidade = 0;
        var notaAlunoUnidade = 0;
    
        foreach (var curso in Model.Cursos)
        {
            notaMaximaCurso = 0;
            notaAlunoCurso = 0;
            qtdMateriaisCurso = 0;

        <hr />
        <div style="text-align: center; padding: 10px 0px 10px 0px; width: 100%; overflow: hidden;">
            <div class="col-md-5">
                <h3><strong>Curso: </strong> @Html.DisplayFor(modelItem => curso.Titulo)</h3>
            </div>
        </div>
        foreach (var unidade in curso.Unidades)
        {
            qtdMateriaisCurso += unidade.Materiais.Count();
            <div style="padding-left: 20px; width: 100%; overflow: hidden;">
                <div class="col-md-5">
                    <strong>Unidade: </strong> @Html.DisplayFor(modelItem => unidade.Titulo)
                </div>
            </div>
            <div style="padding-left: 50px; padding-top: 10px; width: 100%; overflow: hidden;">
                <table>
                    <thead>
                        <tr>
                            <th>Atividade</th>
                            <th style="text-align: right;">Valor</th>
                            <th style="text-align: right;">Nota</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ 
                            notaMaximaUnidade = 0;
                            notaAlunoUnidade = 0;
                        }
                        @foreach (var atividade in unidade.Atividades)
                        {
                            notaMaximaUnidade += atividade.Valor;
                            notaMaximaCurso += atividade.Valor;
                            var nota = Model.Notas.Where(n => n.Idatividade == atividade.Idatividade && n.Idusuario == Model.Idusuario).FirstOrDefault();
                            string nota2 = string.Empty;
                            if (nota != null)
                            {
                                nota2 = nota.Pontos.ToString();
                                notaAlunoCurso = nota.Pontos;
                                notaAlunoUnidade += nota.Pontos;
                            }
                            <tr>
                                <td style="width: 50%;">
                                    @Html.DisplayFor(modelItem => atividade.Descricao)
                                </td>
                                <td style="width: 10%; text-align: right;">
                                    @Html.DisplayFor(modelItem => atividade.Valor)
                                </td>
                                <td style="width: 10%; text-align: right;">
                                    @Html.Raw(nota2)
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color: #d8d9da;">
                            <td style="width: 50%;">
                                Nota na Unidade
                            </td>
                            <td>&nbsp;</td>
                            <td style="width: 20%; text-align: right;">
                                @{
                                    if (notaMaximaUnidade > 0)
                                    {
                                        var porcentagem = (100 * notaAlunoUnidade) / notaMaximaUnidade;
                                        @Html.Raw(porcentagem + "%");
                                    }
                                    else
                                    {
                                        @Html.Raw("0%");
                                    }
                                }

                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div style="padding-left: 50px; padding-top: 10px; width: 100%; overflow: hidden;">
                <table>
                    <thead>
                        <tr>
                            <th>Material</th>
                            <th style="text-align: center;">Visualizado</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var material in unidade.Materiais)
                        {
                            var mat = Model.MateriaisConsultados.Where(m => m.Idmaterial == material.Idmaterial);
                            Model.MateriaisConsultadosPorUnidade += mat.Count();
                            bool visualizado = false;
                            if (mat.Count() > 0)
                            {
                                visualizado = true;
                            }
                            <tr>
                                <td style="width: 50%;">
                                    @Html.DisplayFor(modelItem => material.Descricao)
                                </td>
                                <td style="width: 20%; text-align: center;">
                                    @if (visualizado)
                                    {
                                        <img src="@Server.MapPath("~/Images/GreenCheck.jpg")" />
                                    }
                                    else
                                    {
                                        <img src="@Server.MapPath("~/Images/RedX.jpg")" />
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color: #d8d9da;">
                            <td style="width: 50%;">
                                Materiais Consultados
                            </td>
                            <td style="width: 20%; text-align: center;">
                                @{
                                    if (Model.MateriaisConsultadosPorUnidade > 0)
                                    {
                                        var porcentagem = (100 * Model.MateriaisConsultadosPorUnidade) / unidade.Materiais.Count();
                                        Model.MateriaisConsultadosPorUnidade = 0;
                                        @Html.Raw(porcentagem + "%");
                                    }
                                    else
                                    {
                                        @Html.Raw("0%");
                                    }
                                }

                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }
        <br />
        var aprovado = false;
        if (curso.Encerrado)
        {
            var qtdMateriaisColsultadosCurso = Model.MateriaisConsultados.Where(m => m.Unidade.Idcurso == curso.Idcurso).Count();
            var porcentagemNotaCurso = 0;
            if (notaMaximaCurso > 0)
            {
                porcentagemNotaCurso = (notaAlunoCurso * 100) / notaMaximaCurso;
            }
            aprovado = qtdMateriaisColsultadosCurso == qtdMateriaisCurso && porcentagemNotaCurso >= 70;

            if (aprovado)
            {
                <div style="padding: 2px; text-align: center; color: green;">Aluno Aprovado</div>
            }
            else
            {
                <div style="padding: 2px; text-align: center; color: red;">Aluno Reprovado</div>
            }
        }
        else
        {
            <div style="background-color: yellow; padding: 2px; text-align: center;"><b>Curso em Andamento</b></div>
        }
        <div style="page-break-after: always"></div>
    }
}
</div>
