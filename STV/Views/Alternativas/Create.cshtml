@model STV.ViewModels.AlternativaVM

@{
    ViewBag.Title = "Novo";
}

<ol class="breadcrumb">
    <li><a href="~/Cursos/Details/@Model.Questao.Atividade.Unidade.Curso.Idcurso">@Model.Questao.Atividade.Unidade.Curso.Titulo</a></li>
    <li><a href="~/Cursos/Details/@Model.Questao.Atividade.Unidade.Curso.Idcurso?Idunidade=@Model.Questao.Atividade.Unidade.Idunidade">@Model.Questao.Atividade.Unidade.Titulo</a></li>
    <li><a href="~/Atividades/Details/@Model.Questao.Atividade.Idatividade">@Model.Questao.Atividade.Descricao</a></li>
    <li><a href="~/Atividades/Details/@Model.Questao.Atividade.Idatividade?Idquestao=@Model.Questao.Idquestao">Questão @Model.Questao.Numero</a></li>
    <li class="active">Nova Alternativa</li>
</ol>

<h2>Adicionar</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <h4>Alternativa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="col-md-2" style="text-align: right;">Questão</label>
            <div class="col-md-10">
                @Html.Raw(Model.Questao.Descricao)
                @Html.ValidationMessageFor(model => model.Idquestao, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Questao.AlternativaCorreta != null)
        {
            <div class="form-group">
                <label class="col-md-2" style="text-align: right;">Alternativa correta</label>
                <div class="col-md-10">
                    @Html.Raw(Model.Questao.AlternativaCorreta.Descricao)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descricao, new {  @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Justificativa, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Justificativa, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Justificativa, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.IsCorreta)
        {
            <div class="form-group">
                <div class="control-label col-md-2">
                    
                </div>
                <div class="col-md-10 col-md-offset-2">
                    @Html.Raw("<span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span> <small>Esta alternativa será definida como correta por padrão, mas você pode alterar isso quando houverem outras alternativas cadastradas.</small>")
                    @Html.HiddenFor(model => model.IsCorreta)
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label class="col-md-2" style="text-align: right;">Marcar como Correta</label>
                <div class="col-md-10">
                    <div>
                        @Html.CheckBoxFor(model => model.IsCorreta)
                        @Html.ValidationMessageFor(model => model.IsCorreta, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                <a href="@Url.Action("Details","Atividades",new { id = Model.Questao.Idatividade, Idquestao = Model.Idquestao })" class="btn btn-default grid-control" data-toggle="tooltip" data-placement="auto" title="Voltar para Listagem">Voltar</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
