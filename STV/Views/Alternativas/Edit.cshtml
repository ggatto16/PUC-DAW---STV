@model STV.ViewModels.AlternativaVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Alternativa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Idalternativa)

        <div class="form-group">
            @Html.LabelFor(model => model.Idquestao, "Idquestao", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Idquestao", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Idquestao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Questao.AlternativaCorreta != null)
        {
            <div class="form-group">
                <label class="control-label col-md-2">Alternativa correta:</label>
                <div class="col-md-10">
                     @Html.Label(Model.Questao.AlternativaCorreta.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.IsCorreta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsCorreta, htmlAttributes: (Model.IsCorreta ? new { disabled = "disabled" } : null))
                    @Html.ValidationMessageFor(model => model.IsCorreta, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
